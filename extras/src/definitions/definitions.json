{
  "attestations": {
    "types": {
      "BlockAttestations": {
        "receipt": "CandidateReceipt",
        "valid": "Vec<AccountId>",
        "invalid": "Vec<AccountId>"
      },
      "IncludedBlocks": {
        "actualNumber": "BlockNumber",
        "session": "SessionIndex",
        "randomSeed": "H256",
        "activeParachains": "Vec<ParaId>",
        "paraBlocks": "Vec<Hash>"
      },
      "MoreAttestations": {}
    }
  },
  "aura": {
    "types": {
      "RawAuraPreDigest": {
        "slotNumber": "u64"
      }
    }
  },
  "author": {
    "types": {
      "ExtrinsicOrHash": {
        "_enum": {
          "Hash": "Hash",
          "Extrinsic": "Bytes"
        }
      },
      "ExtrinsicStatus": {
        "_enum": {
          "Future": "Null",
          "Ready": "Null",
          "Broadcast": "Vec<Text>",
          "InBlock": "Hash",
          "Retracted": "Hash",
          "FinalityTimeout": "Hash",
          "Finalized": "Hash",
          "Usurped": "Hash",
          "Dropped": "Null",
          "Invalid": "Null"
        }
      }
    }
  },
  "authorship": {
    "types": {
      "UncleEntryItem": {
        "_enum": {
          "InclusionHeight": "BlockNumber",
          "Uncle": "(Hash, Option<AccountId>)"
        }
      }
    }
  },
  "babe": {
    "types": {
      "AllowedSlots": {
        "_enum": [
          "PrimarySlots",
          "PrimaryAndSecondaryPlainSlots",
          "PrimaryAndSecondaryVRFSlots"
        ]
      },
      "BabeAuthorityWeight": "u64",
      "BabeBlockWeight": "u32",
      "BabeEquivocationProof": {
        "offender": "AuthorityId",
        "slotNumber": "SlotNumber",
        "firstHeader": "Header",
        "secondHeader": "Header"
      },
      "BabeWeight": "u64",
      "MaybeRandomness": "Option<Randomness>",
      "MaybeVrf": "Option<VrfData>",
      "EpochAuthorship": {
        "primary": "Vec<u64>",
        "secondary": "Vec<u64>"
      },
      "NextConfigDescriptor": {
        "_enum": {
          "V0": "Null",
          "V1": "NextConfigDescriptorV1"
        }
      },
      "NextConfigDescriptorV1": {
        "c": "(u64, u64)",
        "allowedSlots": "AllowedSlots"
      },
      "Randomness": "Hash",
      "RawBabePreDigest": {
        "_enum": {
          "Phantom": "Null",
          "Primary": "RawBabePreDigestPrimary",
          "SecondaryPlain": "RawBabePreDigestSecondaryPlain",
          "SecondaryVRF": "RawBabePreDigestSecondaryVRF"
        }
      },
      "RawBabePreDigestPrimary": {
        "authorityIndex": "u32",
        "slotNumber": "SlotNumber",
        "vrfOutput": "VrfOutput",
        "vrfProof": "VrfProof"
      },
      "RawBabePreDigestSecondaryPlain": {
        "authorityIndex": "u32",
        "slotNumber": "SlotNumber"
      },
      "RawBabePreDigestSecondaryVRF": {
        "authorityIndex": "u32",
        "slotNumber": "SlotNumber",
        "vrfOutput": "VrfOutput",
        "vrfProof": "VrfProof"
      },
      "RawBabePreDigestTo159": {
        "_enum": {
          "Primary": "RawBabePreDigestPrimaryTo159",
          "Secondary": "RawBabePreDigestSecondaryTo159"
        }
      },
      "RawBabePreDigestPrimaryTo159": {
        "authorityIndex": "u32",
        "slotNumber": "SlotNumber",
        "weight": "BabeBlockWeight",
        "vrfOutput": "VrfOutput",
        "vrfProof": "VrfProof"
      },
      "RawBabePreDigestSecondaryTo159": {
        "authorityIndex": "u32",
        "slotNumber": "SlotNumber",
        "weight": "BabeBlockWeight"
      },
      "RawBabePreDigestCompat": {
        "_enum": {
          "Zero": "u32",
          "One": "u32",
          "Two": "u32",
          "Three": "u32"
        }
      },
      "SlotNumber": "u64",
      "VrfData": "[u8; 32]",
      "VrfOutput": "[u8; 32]",
      "VrfProof": "[u8; 64]"
    }
  },
  "balances": {
    "types": {
      "AccountData": {
        "free": "Balance",
        "reserved": "Balance",
        "miscFrozen": "Balance",
        "feeFrozen": "Balance"
      },
      "BalanceLockTo212": {
        "id": "LockIdentifier",
        "amount": "Balance",
        "until": "BlockNumber",
        "reasons": "WithdrawReasons"
      },
      "BalanceLock": {
        "id": "LockIdentifier",
        "amount": "Balance",
        "reasons": "Reasons"
      },
      "BalanceStatus": {
        "_enum": [
          "Free",
          "Reserved"
        ]
      },
      "Reasons": {
        "_enum": [
          "Fee",
          "Misc",
          "All"
        ]
      },
      "VestingSchedule": {
        "offset": "Balance",
        "perBlock": "Balance",
        "startingBlock": "BlockNumber"
      },
      "WithdrawReasons": {
        "_set": {
          "TransactionPayment": 1,
          "Transfer": 2,
          "Reserve": 4,
          "Fee": 8,
          "Tip": 16
        }
      }
    }
  },
  "chain": {
    "types": {
      "BlockHash": "Hash"
    }
  },
  "childstate": {
    "types": {
      "PrefixedStorageKey": "StorageKey"
    }
  },
  "claims": {
    "types": {
      "EthereumAddress": "H160",
      "StatementKind": {
        "_enum": [
          "Regular",
          "Saft"
        ]
      }
    }
  },
  "collective": {
    "types": {
      "MemberCount": "u32",
      "ProposalIndex": "u32",
      "VotesTo230": {
        "index": "ProposalIndex",
        "threshold": "MemberCount",
        "ayes": "Vec<AccountId>",
        "nays": "Vec<AccountId>"
      },
      "Votes": {
        "index": "ProposalIndex",
        "threshold": "MemberCount",
        "ayes": "Vec<AccountId>",
        "nays": "Vec<AccountId>",
        "end": "BlockNumber"
      }
    }
  },
  "council": {
    "types": {
      "MemberCount": "u32",
      "ProposalIndex": "u32",
      "VotesTo230": {
        "index": "ProposalIndex",
        "threshold": "MemberCount",
        "ayes": "Vec<AccountId>",
        "nays": "Vec<AccountId>"
      },
      "Votes": {
        "index": "ProposalIndex",
        "threshold": "MemberCount",
        "ayes": "Vec<AccountId>",
        "nays": "Vec<AccountId>",
        "end": "BlockNumber"
      }
    }
  },
  "consensus": {
    "types": {
      "AuthorityId": "AccountId",
      "RawVRFOutput": "[u8; 32]"
    }
  },
  "contracts": {
    "types": {
      "AliveContractInfo": {
        "trieId": "TrieId",
        "storageSize": "u32",
        "codeHash": "CodeHash",
        "rentAllowance": "Balance",
        "deductBlock": "BlockNumber",
        "lastWrite": "Option<BlockNumber>"
      },
      "CodeHash": "Hash",
      "ContractCallRequest": {
        "origin": "AccountId",
        "dest": "AccountId",
        "value": "Balance",
        "gasLimit": "u64",
        "inputData": "Bytes"
      },
      "ContractExecResultSuccessTo255": {
        "status": "u8",
        "data": "Raw"
      },
      "ContractExecResultTo255": {
        "_enum": {
          "Success": "ContractExecResultSuccessTo255",
          "Error": "Null"
        }
      },
      "ContractExecResultSuccess": {
        "flags": "u32",
        "data": "Vec<u8>",
        "gasConsumed": "u64"
      },
      "ContractExecResult": {
        "_enum": {
          "Success": "ContractExecResultSuccess",
          "Error": "Null"
        }
      },
      "ContractInfo": {
        "_enum": {
          "Alive": "AliveContractInfo",
          "Tombstone": "TombstoneContractInfo"
        }
      },
      "ContractStorageKey": "[u8; 32]",
      "Gas": "u64",
      "PrefabWasmModule": {
        "scheduleVersion": "Compact<u32>",
        "initial": "Compact<u32>",
        "maximum": "Compact<u32>",
        "_reserved": "PrefabWasmModuleReserved",
        "code": "Bytes"
      },
      "PrefabWasmModuleReserved": "Option<Null>",
      "ScheduleTo212": {
        "version": "u32",
        "putCodePerByteCost": "Gas",
        "growMemCost": "Gas",
        "regularOpCost": "Gas",
        "returnDataPerByteCost": "Gas",
        "eventDataPerByteCost": "Gas",
        "eventPerTopicCost": "Gas",
        "eventBaseCost": "Gas",
        "sandboxDataReadCost": "Gas",
        "sandboxDataWriteCost": "Gas",
        "maxEventTopics": "u32",
        "maxStackHeight": "u32",
        "maxMemoryPages": "u32",
        "enablePrintln": "bool",
        "maxSubjectLen": "u32"
      },
      "Schedule": {
        "version": "u32",
        "putCodePerByteCost": "Gas",
        "growMemCost": "Gas",
        "regularOpCost": "Gas",
        "returnDataPerByteCost": "Gas",
        "eventDataPerByteCost": "Gas",
        "eventPerTopicCost": "Gas",
        "eventBaseCost": "Gas",
        "sandboxDataReadCost": "Gas",
        "sandboxDataWriteCost": "Gas",
        "transferCost": "Gas",
        "maxEventTopics": "u32",
        "maxStackHeight": "u32",
        "maxMemoryPages": "u32",
        "enablePrintln": "bool",
        "maxSubjectLen": "u32"
      },
      "SeedOf": "Hash",
      "TombstoneContractInfo": "Hash",
      "TrieId": "Bytes"
    }
  },
  "democracy": {
    "types": {
      "AccountVote": {
        "_enum": {
          "Standard": "AccountVoteStandard",
          "Split": "AccountVoteSplit"
        }
      },
      "AccountVoteSplit": {
        "aye": "Balance",
        "nay": "Balance"
      },
      "AccountVoteStandard": {
        "vote": "Vote",
        "balance": "Balance"
      },
      "Conviction": {
        "_enum": [
          "None",
          "Locked1x",
          "Locked2x",
          "Locked3x",
          "Locked4x",
          "Locked5x",
          "Locked6x"
        ]
      },
      "Delegations": {
        "votes": "Balance",
        "capital": "Balance"
      },
      "PreimageStatus": {
        "_enum": {
          "Missing": "BlockNumber",
          "Available": "PreimageStatusAvailable"
        }
      },
      "PreimageStatusAvailable": {
        "data": "Bytes",
        "provider": "AccountId",
        "deposit": "Balance",
        "since": "BlockNumber",
        "expiry": "Option<BlockNumber>"
      },
      "PriorLock": "(BlockNumber, Balance)",
      "PropIndex": "u32",
      "Proposal": "Call",
      "ProxyState": {
        "_enum": {
          "Open": "AccountId",
          "Active": "AccountId"
        }
      },
      "ReferendumIndex": "u32",
      "ReferendumInfoTo239": {
        "end": "BlockNumber",
        "proposalHash": "Hash",
        "threshold": "VoteThreshold",
        "delay": "BlockNumber"
      },
      "ReferendumInfo": {
        "_enum": {
          "Ongoing": "ReferendumStatus",
          "Finished": "ReferendumInfoFinished"
        }
      },
      "ReferendumInfoFinished": {
        "approved": "bool",
        "end": "BlockNumber"
      },
      "ReferendumStatus": {
        "end": "BlockNumber",
        "proposalHash": "Hash",
        "threshold": "VoteThreshold",
        "delay": "BlockNumber",
        "tally": "Tally"
      },
      "Tally": {
        "ayes": "Balance",
        "nays": "Balance",
        "turnout": "Balance"
      },
      "Voting": {
        "_enum": {
          "Direct": "VotingDirect",
          "Delegating": "VotingDelegating"
        }
      },
      "VotingDirect": {
        "votes": "Vec<VotingDirectVote>",
        "delegations": "Delegations",
        "prior": "PriorLock"
      },
      "VotingDirectVote": "(ReferendumIndex, AccountVote)",
      "VotingDelegating": {
        "balance": "Balance",
        "target": "AccountId",
        "conviction": "Conviction",
        "delegations": "Delegations",
        "prior": "PriorLock"
      }
    }
  },
  "elections": {
    "types": {
      "ApprovalFlag": "u32",
      "DefunctVoter": {
        "who": "AccountId",
        "voteCount": "Compact<u32>",
        "candidateCount": "Compact<u32>"
      },
      "Renouncing": {
        "_enum": {
          "Member": "Null",
          "RunnerUp": "Null",
          "Candidate": "Compact<u32>"
        }
      },
      "SetIndex": "u32",
      "Vote": "GenericVote",
      "VoteIndex": "u32",
      "VoterInfo": {
        "lastActive": "VoteIndex",
        "lastWin": "VoteIndex",
        "pot": "Balance",
        "stake": "Balance"
      },
      "VoteThreshold": {
        "_enum": [
          "Super majority approval",
          "Super majority rejection",
          "Simple majority"
        ]
      }
    }
  },
  "engine": {
    "types": {
      "CreatedBlock": {
        "hash": "BlockHash",
        "aux": "ImportedAux"
      },
      "ImportedAux": {
        "headerOnly": "bool",
        "clearJustificationRequests": "bool",
        "needsJustification": "bool",
        "badJustification": "bool",
        "needsFinalityProof": "bool",
        "isNewBest": "bool"
      }
    }
  },
  "ethereum": {
    "types": {
      "EthereumAccountId": "GenericEthereumAccountId",
      "EthereumLookupSource": "GenericEthereumLookupSource"
    }
  },
  "evm": {
    "types": {
      "Account": {
        "nonce": "U256",
        "balance": "U256"
      },
      "Log": {
        "address": "H160",
        "topics": "Vec<H256>",
        "data": "Bytes"
      },
      "Vicinity": {
        "gasPrice": "U256",
        "origin": "H160"
      }
    }
  },
  "extrinsics": {
    "types": {
      "Extrinsic": "GenericExtrinsic",
      "ExtrinsicEra": "GenericExtrinsicEra",
      "ExtrinsicPayload": "GenericExtrinsicPayload",
      "ExtrinsicV1": "GenericExtrinsicV1",
      "ExtrinsicPayloadV1": "GenericExtrinsicPayloadV1",
      "ExtrinsicSignatureV1": "GenericExtrinsicSignatureV1",
      "ExtrinsicV2": "GenericExtrinsicV2",
      "ExtrinsicPayloadV2": "GenericExtrinsicPayloadV2",
      "ExtrinsicSignatureV2": "GenericExtrinsicSignatureV2",
      "ExtrinsicV3": "GenericExtrinsicV3",
      "ExtrinsicPayloadV3": "GenericExtrinsicPayloadV3",
      "ExtrinsicSignatureV3": "GenericExtrinsicSignatureV3",
      "ExtrinsicV4": "GenericExtrinsicV4",
      "ExtrinsicPayloadV4": "GenericExtrinsicPayloadV4",
      "ExtrinsicSignatureV4": "GenericExtrinsicSignatureV4",
      "ExtrinsicUnknown": "GenericExtrinsicUnknown",
      "ExtrinsicPayloadUnknown": "GenericExtrinsicPayloadUnknown",
      "ImmortalEra": "GenericImmortalEra",
      "MortalEra": "GenericMortalEra",
      "MultiSignature": {
        "_enum": {
          "Ed25519": "Ed25519Signature",
          "Sr25519": "Sr25519Signature",
          "Ecdsa": "EcdsaSignature"
        }
      },
      "Signature": "H512",
      "SignerPayload": "GenericSignerPayload",
      "EcdsaSignature": "[u8; 65]",
      "Ed25519Signature": "H512",
      "Sr25519Signature": "H512"
    }
  },
  "genericasset": {
    "types": {
      "AssetOptions": {
        "initalIssuance": "Compact<Balance>",
        "permissions": "PermissionLatest"
      },
      "Owner": {
        "_enum": {
          "None": "Null",
          "Address": "AccountId"
        }
      },
      "PermissionsV1": {
        "update": "Owner",
        "mint": "Owner",
        "burn": "Owner"
      },
      "PermissionVersions": {
        "_enum": {
          "V1": "PermissionsV1"
        }
      },
      "PermissionLatest": "PermissionsV1"
    }
  },
  "grandpa": {
    "types": {
      "AuthorityIndex": "u64",
      "AuthorityList": "Vec<NextAuthority>",
      "AuthorityWeight": "u64",
      "GrandpaEquivocation": {
        "_enum": {
          "Prevote": "GrandpaEquivocationValue",
          "Precommit": "GrandpaEquivocationValue"
        }
      },
      "GrandpaEquivocationProof": {
        "setId": "SetId",
        "equivocation": "GrandpaEquivocation"
      },
      "GrandpaEquivocationValue": {
        "roundNumber": "u64",
        "identity": "AuthorityId",
        "first": "(GrandpaPrevote, AuthoritySignature)",
        "second": "(GrandpaPrevote, AuthoritySignature)"
      },
      "GrandpaPrevote": {
        "targetHash": "Hash",
        "targetNumber": "BlockNumber"
      },
      "JustificationNotification": "Bytes",
      "KeyOwnerProof": "MembershipProof",
      "NextAuthority": "(AuthorityId, AuthorityWeight)",
      "PendingPause": {
        "scheduledAt": "BlockNumber",
        "delay": "BlockNumber"
      },
      "PendingResume": {
        "scheduledAt": "BlockNumber",
        "delay": "BlockNumber"
      },
      "Precommits": {
        "currentWeight": "u32",
        "missing": "BTreeSet<AuthorityId>"
      },
      "Prevotes": {
        "currentWeight": "u32",
        "missing": "BTreeSet<AuthorityId>"
      },
      "ReportedRoundStates": {
        "setId": "u32",
        "best": "RoundState",
        "background": "Vec<RoundState>"
      },
      "RoundState": {
        "round": "u32",
        "totalWeight": "u32",
        "thresholdWeight": "u32",
        "prevotes": "Prevotes",
        "precommits": "Precommits"
      },
      "SetId": "u64",
      "StoredPendingChange": {
        "scheduledAt": "BlockNumber",
        "delay": "BlockNumber",
        "nextAuthorities": "AuthorityList"
      },
      "StoredState": {
        "_enum": {
          "Live": "Null",
          "PendingPause": "PendingPause",
          "Paused": "Null",
          "PendingResume": "PendingResume"
        }
      }
    }
  },
  "identity": {
    "types": {
      "IdentityFields": {
        "_set": {
          "_bitLength": 64,
          "Display": 1,
          "Legal": 2,
          "Web": 4,
          "Riot": 8,
          "Email": 16,
          "PgpFingerprint": 32,
          "Image": 64,
          "Twitter": 128
        }
      },
      "IdentityInfoAdditional": "(Data, Data)",
      "IdentityInfo": {
        "additional": "Vec<IdentityInfoAdditional>",
        "display": "Data",
        "legal": "Data",
        "web": "Data",
        "riot": "Data",
        "email": "Data",
        "pgpFingerprint": "Option<H160>",
        "image": "Data",
        "twitter": "Data"
      },
      "IdentityJudgement": {
        "_enum": {
          "Unknown": "Null",
          "FeePaid": "Balance",
          "Reasonable": "Null",
          "KnownGood": "Null",
          "OutOfDate": "Null",
          "LowQuality": "Null",
          "Erroneous": "Null"
        }
      },
      "RegistrationJudgement": "(RegistrarIndex, IdentityJudgement)",
      "Registration": {
        "judgements": "Vec<RegistrationJudgement>",
        "deposit": "Balance",
        "info": "IdentityInfo"
      },
      "RegistrarIndex": "u32",
      "RegistrarInfo": {
        "account": "AccountId",
        "fee": "Balance",
        "fields": "IdentityFields"
      }
    }
  },
  "imonline": {
    "types": {
      "AuthIndex": "u32",
      "AuthoritySignature": "Signature",
      "Heartbeat": {
        "blockNumber": "BlockNumber",
        "networkState": "OpaqueNetworkState",
        "sessionIndex": "SessionIndex",
        "authorityIndex": "AuthIndex",
        "validatorsLen": "u32"
      },
      "HeartbeatTo244": {
        "blockNumber": "BlockNumber",
        "networkState": "OpaqueNetworkState",
        "sessionIndex": "SessionIndex",
        "authorityIndex": "AuthIndex"
      },
      "OpaqueMultiaddr": "Bytes",
      "OpaquePeerId": "Bytes",
      "OpaqueNetworkState": {
        "peerId": "OpaquePeerId",
        "externalAddresses": "Vec<OpaqueMultiaddr>"
      }
    }
  },
  "metadata": {
    "types": {
      "CallMetadataV0": {
        "name": "Text",
        "functions": "Vec<FunctionMetadataV0>"
      },
      "EventMetadataV0": {
        "name": "Text",
        "args": "Vec<Type>",
        "documentation": "Vec<Text>"
      },
      "FunctionArgumentMetadataV0": {
        "name": "Text",
        "type": "Type"
      },
      "FunctionMetadataV0": {
        "id": "u16",
        "name": "Text",
        "args": "Vec<FunctionArgumentMetadataV0>",
        "documentation": "Vec<Text>"
      },
      "MapTypeV0": {
        "key": "Type",
        "value": "Type"
      },
      "MetadataV0": {
        "outerEvent": "OuterEventMetadataV0",
        "modules": "Vec<RuntimeModuleMetadataV0>",
        "outerDispatch": "OuterDispatchMetadataV0"
      },
      "ModuleMetadataV0": {
        "name": "Text",
        "call": "CallMetadataV0"
      },
      "OuterDispatchCallV0": {
        "name": "Text",
        "prefix": "Text",
        "index": "u16"
      },
      "OuterDispatchMetadataV0": {
        "name": "Text",
        "calls": "Vec<OuterDispatchCallV0>"
      },
      "OuterEventEventMetadataEventsV0": "Vec<EventMetadataV0>",
      "OuterEventEventMetadataV0": "(Text, OuterEventEventMetadataEventsV0)",
      "OuterEventMetadataV0": {
        "name": "Text",
        "events": "Vec<OuterEventEventMetadataV0>"
      },
      "PlainTypeV0": "Type",
      "RuntimeModuleMetadataV0": {
        "prefix": "Text",
        "module": "ModuleMetadataV0",
        "storage": "Option<StorageMetadataV0>"
      },
      "StorageFunctionMetadataV0": {
        "name": "Text",
        "modifier": "StorageFunctionModifierV0",
        "type": "StorageFunctionTypeV0",
        "fallback": "Bytes",
        "documentation": "Vec<Text>"
      },
      "StorageFunctionModifierV0": {
        "_enum": [
          "Optional",
          "Default",
          "Required"
        ]
      },
      "StorageFunctionTypeV0": {
        "_enum": {
          "Plain": "PlainTypeV0",
          "Map": "MapTypeV0"
        }
      },
      "StorageMetadataV0": {
        "prefix": "Text",
        "functions": "Vec<StorageFunctionMetadataV0>"
      },
      "EventMetadataV1": "EventMetadataV0",
      "FunctionArgumentMetadataV1": "FunctionArgumentMetadataV0",
      "FunctionMetadataV1": {
        "name": "Text",
        "args": "Vec<FunctionArgumentMetadataV1>",
        "documentation": "Vec<Text>"
      },
      "MetadataV1": {
        "modules": "Vec<ModuleMetadataV1>"
      },
      "ModuleMetadataV1": {
        "name": "Text",
        "prefix": "Text",
        "storage": "Option<Vec<StorageFunctionMetadataV1>>",
        "calls": "Option<Vec<FunctionMetadataV1>>",
        "events": "Option<Vec<EventMetadataV1>>"
      },
      "StorageFunctionMetadataV1": "StorageFunctionMetadataV0",
      "StorageFunctionModifierV1": "StorageFunctionModifierV0",
      "StorageFunctionTypeV1": "StorageFunctionTypeV0",
      "EventMetadataV2": "EventMetadataV1",
      "FunctionArgumentMetadataV2": "FunctionArgumentMetadataV1",
      "FunctionMetadataV2": "FunctionMetadataV1",
      "MapTypeV2": {
        "key": "Type",
        "value": "Type",
        "linked": "bool"
      },
      "MetadataV2": {
        "modules": "Vec<ModuleMetadataV2>"
      },
      "ModuleMetadataV2": {
        "name": "Text",
        "prefix": "Text",
        "storage": "Option<Vec<StorageFunctionMetadataV2>>",
        "calls": "Option<Vec<FunctionMetadataV2>>",
        "events": "Option<Vec<EventMetadataV2>>"
      },
      "PlainTypeV2": "Type",
      "StorageFunctionMetadataV2": {
        "name": "Text",
        "modifier": "StorageFunctionModifierV2",
        "type": "StorageFunctionTypeV2",
        "fallback": "Bytes",
        "documentation": "Vec<Text>"
      },
      "StorageFunctionModifierV2": "StorageFunctionModifierV1",
      "StorageFunctionTypeV2": {
        "_enum": {
          "Plain": "PlainTypeV2",
          "Map": "MapTypeV2"
        }
      },
      "DoubleMapTypeV3": {
        "key1": "Type",
        "key2": "Type",
        "value": "Type",
        "key2Hasher": "Text"
      },
      "EventMetadataV3": "EventMetadataV2",
      "FunctionArgumentMetadataV3": "FunctionArgumentMetadataV2",
      "FunctionMetadataV3": "FunctionMetadataV2",
      "MapTypeV3": "MapTypeV2",
      "MetadataV3": {
        "modules": "Vec<ModuleMetadataV3>"
      },
      "ModuleMetadataV3": {
        "name": "Text",
        "prefix": "Text",
        "storage": "Option<Vec<StorageFunctionMetadataV3>>",
        "calls": "Option<Vec<FunctionMetadataV3>>",
        "events": "Option<Vec<EventMetadataV3>>"
      },
      "PlainTypeV3": "Type",
      "StorageFunctionMetadataV3": {
        "name": "Text",
        "modifier": "StorageFunctionModifierV3",
        "type": "StorageFunctionTypeV3",
        "fallback": "Bytes",
        "documentation": "Vec<Text>"
      },
      "StorageFunctionModifierV3": "StorageFunctionModifierV2",
      "StorageFunctionTypeV3": {
        "_enum": {
          "Plain": "PlainTypeV3",
          "Map": "MapTypeV3",
          "DoubleMap": "DoubleMapTypeV3"
        }
      },
      "DoubleMapTypeV4": {
        "hasher": "StorageHasherV4",
        "key1": "Type",
        "key2": "Type",
        "value": "Type",
        "key2Hasher": "Text"
      },
      "EventMetadataV4": "EventMetadataV3",
      "FunctionArgumentMetadataV4": "FunctionArgumentMetadataV3",
      "FunctionMetadataV4": "FunctionMetadataV3",
      "MapTypeV4": {
        "hasher": "StorageHasherV4",
        "key": "Type",
        "value": "Type",
        "linked": "bool"
      },
      "MetadataV4": {
        "modules": "Vec<ModuleMetadataV4>"
      },
      "ModuleMetadataV4": {
        "name": "Text",
        "prefix": "Text",
        "storage": "Option<Vec<StorageFunctionMetadataV4>>",
        "calls": "Option<Vec<FunctionMetadataV4>>",
        "events": "Option<Vec<EventMetadataV4>>"
      },
      "PlainTypeV4": "Type",
      "StorageFunctionMetadataV4": {
        "name": "Text",
        "modifier": "StorageFunctionModifierV4",
        "type": "StorageFunctionTypeV4",
        "fallback": "Bytes",
        "documentation": "Vec<Text>"
      },
      "StorageFunctionModifierV4": "StorageFunctionModifierV3",
      "StorageFunctionTypeV4": {
        "_enum": {
          "Plain": "PlainTypeV4",
          "Map": "MapTypeV4",
          "DoubleMap": "DoubleMapTypeV4"
        }
      },
      "StorageHasherV4": {
        "_enum": {
          "Blake2_128": null,
          "Blake2_256": null,
          "Twox128": null,
          "Twox256": null,
          "Twox64Concat": null
        }
      },
      "DoubleMapTypeV5": {
        "hasher": "StorageHasherV5",
        "key1": "Type",
        "key2": "Type",
        "value": "Type",
        "key2Hasher": "StorageHasherV5"
      },
      "EventMetadataV5": "EventMetadataV4",
      "FunctionArgumentMetadataV5": "FunctionArgumentMetadataV4",
      "FunctionMetadataV5": "FunctionMetadataV4",
      "MapTypeV5": "MapTypeV4",
      "MetadataV5": {
        "modules": "Vec<ModuleMetadataV5>"
      },
      "ModuleMetadataV5": {
        "name": "Text",
        "prefix": "Text",
        "storage": "Option<Vec<StorageFunctionMetadataV5>>",
        "calls": "Option<Vec<FunctionMetadataV5>>",
        "events": "Option<Vec<EventMetadataV5>>"
      },
      "PlainTypeV5": "Type",
      "StorageFunctionMetadataV5": {
        "name": "Text",
        "modifier": "StorageFunctionModifierV5",
        "type": "StorageFunctionTypeV5",
        "fallback": "Bytes",
        "documentation": "Vec<Text>"
      },
      "StorageFunctionModifierV5": "StorageFunctionModifierV4",
      "StorageFunctionTypeV5": {
        "_enum": {
          "Plain": "PlainTypeV5",
          "Map": "MapTypeV5",
          "DoubleMap": "DoubleMapTypeV5"
        }
      },
      "StorageHasherV5": "StorageHasherV4",
      "DoubleMapTypeV6": "DoubleMapTypeV5",
      "EventMetadataV6": "EventMetadataV5",
      "FunctionArgumentMetadataV6": "FunctionArgumentMetadataV5",
      "FunctionMetadataV6": "FunctionMetadataV5",
      "MapTypeV6": "MapTypeV5",
      "MetadataV6": {
        "modules": "Vec<ModuleMetadataV6>"
      },
      "ModuleConstantMetadataV6": {
        "name": "Text",
        "type": "Type",
        "value": "Bytes",
        "documentation": "Vec<Text>"
      },
      "ModuleMetadataV6": {
        "name": "Text",
        "prefix": "Text",
        "storage": "Option<Vec<StorageEntryMetadataV6>>",
        "calls": "Option<Vec<FunctionMetadataV6>>",
        "events": "Option<Vec<EventMetadataV6>>",
        "constants": "Vec<ModuleConstantMetadataV6>"
      },
      "PlainTypeV6": "Type",
      "StorageEntryModifierV6": "StorageFunctionModifierV5",
      "StorageEntryMetadataV6": "StorageFunctionMetadataV5",
      "StorageEntryTypeV6": "StorageFunctionTypeV5",
      "StorageHasherV6": "StorageHasherV5",
      "DoubleMapTypeV7": "DoubleMapTypeV6",
      "EventMetadataV7": "EventMetadataV6",
      "FunctionArgumentMetadataV7": "FunctionArgumentMetadataV6",
      "FunctionMetadataV7": "FunctionMetadataV6",
      "MapTypeV7": "MapTypeV6",
      "MetadataV7": {
        "modules": "Vec<ModuleMetadataV7>"
      },
      "ModuleConstantMetadataV7": "ModuleConstantMetadataV6",
      "ModuleMetadataV7": {
        "name": "Text",
        "storage": "Option<StorageMetadataV7>",
        "calls": "Option<Vec<FunctionMetadataV7>>",
        "events": "Option<Vec<EventMetadataV7>>",
        "constants": "Vec<ModuleConstantMetadataV7>"
      },
      "PlainTypeV7": "Type",
      "StorageEntryModifierV7": "StorageEntryModifierV6",
      "StorageEntryMetadataV7": "StorageEntryMetadataV6",
      "StorageEntryTypeV7": "StorageEntryTypeV6",
      "StorageHasherV7": "StorageHasherV6",
      "StorageMetadataV7": {
        "prefix": "Text",
        "items": "Vec<StorageEntryMetadataV7>"
      },
      "DoubleMapTypeV8": "DoubleMapTypeV7",
      "ErrorMetadataV8": {
        "name": "Text",
        "documentation": "Vec<Text>"
      },
      "EventMetadataV8": "EventMetadataV7",
      "FunctionArgumentMetadataV8": "FunctionArgumentMetadataV7",
      "FunctionMetadataV8": "FunctionMetadataV7",
      "MapTypeV8": "MapTypeV7",
      "MetadataV8": {
        "modules": "Vec<ModuleMetadataV8>"
      },
      "ModuleConstantMetadataV8": "ModuleConstantMetadataV7",
      "ModuleMetadataV8": {
        "name": "Text",
        "storage": "Option<StorageMetadataV8>",
        "calls": "Option<Vec<FunctionMetadataV8>>",
        "events": "Option<Vec<EventMetadataV8>>",
        "constants": "Vec<ModuleConstantMetadataV8>",
        "errors": "Vec<ErrorMetadataV8>"
      },
      "PlainTypeV8": "Type",
      "StorageEntryModifierV8": "StorageEntryModifierV7",
      "StorageEntryMetadataV8": "StorageEntryMetadataV7",
      "StorageEntryTypeV8": "StorageEntryTypeV7",
      "StorageHasherV8": "StorageHasherV7",
      "StorageMetadataV8": "StorageMetadataV7",
      "DoubleMapTypeV9": "DoubleMapTypeV8",
      "ErrorMetadataV9": "ErrorMetadataV8",
      "EventMetadataV9": "EventMetadataV8",
      "FunctionArgumentMetadataV9": "FunctionArgumentMetadataV8",
      "FunctionMetadataV9": "FunctionMetadataV8",
      "MapTypeV9": "MapTypeV8",
      "MetadataV9": "MetadataV8",
      "ModuleConstantMetadataV9": "ModuleConstantMetadataV8",
      "ModuleMetadataV9": "ModuleMetadataV8",
      "PlainTypeV9": "Type",
      "StorageEntryModifierV9": "StorageEntryModifierV8",
      "StorageEntryMetadataV9": "StorageEntryMetadataV8",
      "StorageEntryTypeV9": "StorageEntryTypeV8",
      "StorageHasherV9": "StorageHasherV8",
      "StorageMetadataV9": "StorageMetadataV8",
      "DoubleMapTypeV10": {
        "hasher": "StorageHasherV10",
        "key1": "Type",
        "key2": "Type",
        "value": "Type",
        "key2Hasher": "StorageHasherV10"
      },
      "ErrorMetadataV10": "ErrorMetadataV9",
      "EventMetadataV10": "EventMetadataV9",
      "FunctionArgumentMetadataV10": "FunctionArgumentMetadataV9",
      "FunctionMetadataV10": "FunctionMetadataV9",
      "MapTypeV10": {
        "hasher": "StorageHasherV10",
        "key": "Type",
        "value": "Type",
        "linked": "bool"
      },
      "MetadataV10": {
        "modules": "Vec<ModuleMetadataV10>"
      },
      "ModuleConstantMetadataV10": "ModuleConstantMetadataV9",
      "ModuleMetadataV10": {
        "name": "Text",
        "storage": "Option<StorageMetadataV10>",
        "calls": "Option<Vec<FunctionMetadataV10>>",
        "events": "Option<Vec<EventMetadataV10>>",
        "constants": "Vec<ModuleConstantMetadataV10>",
        "errors": "Vec<ErrorMetadataV10>"
      },
      "PlainTypeV10": "Type",
      "StorageEntryModifierV10": "StorageEntryModifierV9",
      "StorageEntryMetadataV10": {
        "name": "Text",
        "modifier": "StorageEntryModifierV10",
        "type": "StorageEntryTypeV10",
        "fallback": "Bytes",
        "documentation": "Vec<Text>"
      },
      "StorageEntryTypeV10": {
        "_enum": {
          "Plain": "PlainTypeV10",
          "Map": "MapTypeV10",
          "DoubleMap": "DoubleMapTypeV10"
        }
      },
      "StorageMetadataV10": {
        "prefix": "Text",
        "items": "Vec<StorageEntryMetadataV10>"
      },
      "StorageHasherV10": {
        "_enum": {
          "Blake2_128": null,
          "Blake2_256": null,
          "Blake2_128Concat": null,
          "Twox128": null,
          "Twox256": null,
          "Twox64Concat": null
        }
      },
      "DoubleMapTypeV11": {
        "hasher": "StorageHasherV11",
        "key1": "Type",
        "key2": "Type",
        "value": "Type",
        "key2Hasher": "StorageHasherV11"
      },
      "ErrorMetadataV11": "ErrorMetadataV10",
      "EventMetadataV11": "EventMetadataV10",
      "ExtrinsicMetadataV11": {
        "version": "u8",
        "signedExtensions": "Vec<Text>"
      },
      "FunctionArgumentMetadataV11": "FunctionArgumentMetadataV10",
      "FunctionMetadataV11": "FunctionMetadataV10",
      "MapTypeV11": {
        "hasher": "StorageHasherV11",
        "key": "Type",
        "value": "Type",
        "linked": "bool"
      },
      "MetadataV11": {
        "modules": "Vec<ModuleMetadataV11>",
        "extrinsic": "ExtrinsicMetadataV11"
      },
      "ModuleConstantMetadataV11": "ModuleConstantMetadataV10",
      "ModuleMetadataV11": {
        "name": "Text",
        "storage": "Option<StorageMetadataV11>",
        "calls": "Option<Vec<FunctionMetadataV11>>",
        "events": "Option<Vec<EventMetadataV11>>",
        "constants": "Vec<ModuleConstantMetadataV11>",
        "errors": "Vec<ErrorMetadataV11>"
      },
      "PlainTypeV11": "Type",
      "StorageEntryModifierV11": "StorageEntryModifierV10",
      "StorageEntryMetadataV11": {
        "name": "Text",
        "modifier": "StorageEntryModifierV11",
        "type": "StorageEntryTypeV11",
        "fallback": "Bytes",
        "documentation": "Vec<Text>"
      },
      "StorageEntryTypeV11": {
        "_enum": {
          "Plain": "PlainTypeV11",
          "Map": "MapTypeV11",
          "DoubleMap": "DoubleMapTypeV11"
        }
      },
      "StorageMetadataV11": {
        "prefix": "Text",
        "items": "Vec<StorageEntryMetadataV11>"
      },
      "StorageHasherV11": {
        "_enum": {
          "Blake2_128": null,
          "Blake2_256": null,
          "Blake2_128Concat": null,
          "Twox128": null,
          "Twox256": null,
          "Twox64Concat": null,
          "Identity": null
        }
      },
      "DoubleMapTypeLatest": "DoubleMapTypeV11",
      "EventMetadataLatest": "EventMetadataV11",
      "ExtrinsicMetadataLatest": "ExtrinsicMetadataV11",
      "FunctionArgumentMetadataLatest": "FunctionArgumentMetadataV11",
      "FunctionMetadataLatest": "FunctionMetadataV11",
      "MapTypeLatest": "MapTypeV11",
      "MetadataLatest": "MetadataV11",
      "ModuleConstantMetadataLatest": "ModuleConstantMetadataV11",
      "ModuleMetadataLatest": "ModuleMetadataV11",
      "PlainTypeLatest": "PlainTypeV11",
      "StorageEntryMetadataLatest": "StorageEntryMetadataV11",
      "StorageEntryModifierLatest": "StorageEntryModifierV11",
      "StorageEntryTypeLatest": "StorageEntryTypeV11",
      "StorageMetadataLatest": "StorageMetadataV11",
      "StorageHasher": "StorageHasherV11",
      "MetadataAll": {
        "_enum": {
          "V0": "MetadataV0",
          "V1": "MetadataV1",
          "V2": "MetadataV2",
          "V3": "MetadataV3",
          "V4": "MetadataV4",
          "V5": "MetadataV5",
          "V6": "MetadataV6",
          "V7": "MetadataV7",
          "V8": "MetadataV8",
          "V9": "MetadataV9",
          "V10": "MetadataV10",
          "V11": "MetadataV11"
        }
      }
    }
  },
  "offchain": {
    "types": {
      "StorageKind": {
        "_enum": [
          "__UNUSED",
          "PERSISTENT",
          "LOCAL"
        ]
      }
    }
  },
  "offences": {
    "types": {
      "DeferredOffenceOf": "(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)",
      "Kind": "[u8; 16]",
      "OffenceDetails": {
        "offender": "Offender",
        "reporters": "Vec<Reporter>"
      },
      "Offender": "IdentificationTuple",
      "OpaqueTimeSlot": "Bytes",
      "ReportIdOf": "Hash",
      "Reporter": "AccountId"
    }
  },
  "parachains": {
    "types": {
      "ParachainProposal": {
        "proposer": "AccountId",
        "validationFunction": "ValidationCode",
        "initialHeadState": "HeadData",
        "validators": "Vec<ValidatorId>",
        "name": "Vec<u8>",
        "balance": "Balance"
      },
      "RegisteredParachainInfo": {
        "validators": "Vec<ValidatorId>",
        "proposer": "AccountId"
      },
      "AbridgedCandidateReceipt": {
        "parachainIndex": "ParaId",
        "relayParent": "Hash",
        "headData": "HeadData",
        "collator": "CollatorId",
        "signature": "CollatorSignature",
        "povBlockHash": "Hash",
        "commitments": "CandidateCommitments"
      },
      "AttestedCandidate": {
        "candidate": "AbridgedCandidateReceipt",
        "validityVotes": "Vec<ValidityAttestation>",
        "validatorIndices": "BitVec"
      },
      "AuctionIndex": "u32",
      "Bidder": {
        "_enum": {
          "New": "NewBidder",
          "Existing": "ParaId"
        }
      },
      "CandidateCommitments": {
        "fees": "Balance",
        "upwardMessages": "Vec<UpwardMessage>",
        "erasureRoot": "Hash",
        "newValidationCode": "Option<ValidationCode>",
        "processedDownwardMessages": "u32"
      },
      "CandidateReceipt": {
        "parachainIndex": "ParaId",
        "relayParent": "Hash",
        "head_data": "HeadData",
        "collator": "CollatorId",
        "signature": "CollatorSignature",
        "povBlockHash": "Hash",
        "globalValidation": "GlobalValidationSchedule",
        "localValidation": "LocalValidationData",
        "commitments": "CandidateCommitments"
      },
      "CollatorId": "[u8; 32]",
      "CollatorSignature": "Signature",
      "DoubleVoteReport": {
        "identity": "ValidatorId",
        "first": "(Statement, ValidatorSignature)",
        "second": "(Statement, ValidatorSignature)",
        "proof": "MembershipProof",
        "signingContext": "SigningContext"
      },
      "DownwardMessage": {
        "_enum": {
          "TransferInto": "(AccountId, Balance, Remark)",
          "Opaque": "Vec<u8>"
        }
      },
      "GlobalValidationSchedule": {
        "maxCodeSize": "u32",
        "maxHeadDataSize": "u32",
        "blockNumber": "BlockNumber"
      },
      "HeadData": "Bytes",
      "IncomingParachain": {
        "_enum": {
          "Unset": "NewBidder",
          "Fixed": "IncomingParachainFixed",
          "Deploy": "IncomingParachainDeploy"
        }
      },
      "IncomingParachainFixed": {
        "codeHash": "Hash",
        "codeSize": "u32",
        "initialHeadData": "HeadData"
      },
      "IncomingParachainDeploy": {
        "code": "ValidationCode",
        "initialHeadData": "HeadData"
      },
      "LeasePeriod": "BlockNumber",
      "LeasePeriodOf": "LeasePeriod",
      "LocalValidationData": {
        "parentHead": "HeadData",
        "balance": "Balance",
        "codeUpgradeAllowed": "Option<BlockNumber>"
      },
      "NewBidder": {
        "who": "AccountId",
        "sub": "SubId"
      },
      "ParachainDispatchOrigin": {
        "_enum": [
          "Signed",
          "Parachain",
          "Root"
        ]
      },
      "ParaId": "u32",
      "ParaInfo": {
        "scheduling": "Scheduling"
      },
      "ParaPastCodeMeta": {
        "upgradeTimes": "Vec<BlockNumber>",
        "lastPruned": "Option<BlockNumber>"
      },
      "ParaScheduling": {
        "_enum": [
          "Always",
          "Dynamic"
        ]
      },
      "RelayChainBlockNumber": "BlockNumber",
      "Remark": "[u8; 32]",
      "Retriable": {
        "_enum": {
          "Never": "Null",
          "WithRetries": "u32"
        }
      },
      "Scheduling": {
        "_enum": [
          "Always",
          "Dynamic"
        ]
      },
      "SigningContext": {
        "sessionIndex": "SessionIndex",
        "parentHash": "Hash"
      },
      "SlotRange": {
        "_enum": [
          "ZeroZero",
          "ZeroOne",
          "ZeroTwo",
          "ZeroThree",
          "OneOne",
          "OneTwo",
          "OneThree",
          "TwoTwo",
          "TwoThree",
          "ThreeThree"
        ]
      },
      "Statement": {
        "_enum": {
          "Never": "Null",
          "Candidate": "Hash",
          "Valid": "Hash",
          "Invalid": "Hash"
        }
      },
      "SubId": "u32",
      "UpwardMessage": {
        "origin": "ParachainDispatchOrigin",
        "data": "Vec<u8>"
      },
      "ValidationFunctionParams": {
        "maxCodeSize": "u32",
        "relayChainHeight": "RelayChainBlockNumber",
        "codeUpgradeAllowed": "Option<RelayChainBlockNumber>"
      },
      "ValidationCode": "Bytes",
      "ValidatorSignature": "Signature",
      "ValidityAttestation": {
        "_enum": {
          "Never": "Null",
          "Implicit": "ValidatorSignature",
          "Explicit": "ValidatorSignature"
        }
      },
      "WinningData": "[WinningDataEntry; 10]",
      "WinningDataEntry": "Option<Bidder>"
    }
  },
  "payment": {
    "types": {
      "RuntimeDispatchInfo": {
        "weight": "Weight",
        "class": "DispatchClass",
        "partialFee": "Balance"
      }
    }
  },
  "poll": {
    "types": {
      "Approvals": "[bool; 4]"
    }
  },
  "proxy": {
    "types": {
      "ProxyDefinition": {
        "delegate": "AccountId",
        "proxyType": "ProxyType",
        "delay": "BlockNumber"
      },
      "ProxyType": {
        "_enum": [
          "Any",
          "NonTransfer",
          "Governance",
          "Staking"
        ]
      },
      "ProxyAnnouncement": {
        "real": "AccountId",
        "callHash": "Hash",
        "height": "BlockNumber"
      }
    }
  },
  "purchase": {
    "types": {
      "AccountStatus": {
        "validity": "AccountValidity",
        "freeBalance": "Balance",
        "lockedBalance": "Balance",
        "signature": "Vec<u8>",
        "vat": "Permill"
      },
      "AccountValidity": {
        "_enum": [
          "Invalid",
          "Initiated",
          "Pending",
          "ValidLow",
          "ValidHigh",
          "Completed"
        ]
      }
    }
  },
  "recovery": {
    "types": {
      "ActiveRecovery": {
        "created": "BlockNumber",
        "deposit": "Balance",
        "friends": "Vec<AccountId>"
      },
      "RecoveryConfig": {
        "delayPeriod": "BlockNumber",
        "deposit": "Balance",
        "friends": "Vec<AccountId>",
        "threshold": "u16"
      }
    }
  },
  "rpc": {
    "types": {
      "RpcMethods": {
        "version": "u32",
        "methods": "Vec<Text>"
      }
    }
  },
  "runtime": {
    "types": {
      "Fixed64": "Int<64, Fixed64>",
      "FixedI64": "Int<64, FixedI64>",
      "FixedU64": "UInt<64, FixedU64>",
      "Fixed128": "Int<128, Fixed128>",
      "FixedI128": "Int<128, FixedI128>",
      "FixedU128": "UInt<128, FixedU128>",
      "I32F32": "Int<64, I32F32>",
      "U32F32": "UInt<64, U32F32>",
      "PerU16": "u16",
      "Perbill": "u32",
      "Percent": "u8",
      "Permill": "u32",
      "Perquintill": "u64",
      "AccountId": "GenericAccountId",
      "AccountIdOf": "AccountId",
      "AccountIndex": "GenericAccountIndex",
      "Address": "GenericAddress",
      "AssetId": "u32",
      "Balance": "u128",
      "BalanceOf": "Balance",
      "Block": "GenericBlock",
      "BlockNumber": "u32",
      "Call": "GenericCall",
      "CallHash": "Hash",
      "CallHashOf": "CallHash",
      "ChangesTrieConfiguration": {
        "digestInterval": "u32",
        "digestLevels": "u32"
      },
      "ConsensusEngineId": "GenericConsensusEngineId",
      "Digest": {
        "logs": "Vec<DigestItem>"
      },
      "DigestItem": {
        "_enum": {
          "Other": "Bytes",
          "AuthoritiesChange": "Vec<AuthorityId>",
          "ChangesTrieRoot": "Hash",
          "SealV0": "SealV0",
          "Consensus": "Consensus",
          "Seal": "Seal",
          "PreRuntime": "PreRuntime"
        }
      },
      "ExtrinsicsWeight": {
        "normal": "Weight",
        "operational": "Weight"
      },
      "GenericAddress": "LookupSource",
      "H160": "[u8; 20]",
      "H256": "[u8; 32]",
      "H512": "[u8; 64]",
      "Hash": "H256",
      "Header": {
        "parentHash": "Hash",
        "number": "Compact<BlockNumber>",
        "stateRoot": "Hash",
        "extrinsicsRoot": "Hash",
        "digest": "Digest"
      },
      "Index": "u32",
      "Justification": "Bytes",
      "KeyValue": "(StorageKey, StorageData)",
      "KeyTypeId": "u32",
      "LockIdentifier": "[u8; 8]",
      "LookupSource": "GenericLookupSource",
      "LookupTarget": "AccountId",
      "ModuleId": "LockIdentifier",
      "Moment": "u64",
      "OpaqueCall": "Bytes",
      "Origin": "DoNotConstruct<Origin>",
      "Pays": {
        "_enum": [
          "Yes",
          "No"
        ]
      },
      "Phantom": "Null",
      "PhantomData": "Null",
      "Releases": {
        "_enum": [
          "V1",
          "V2",
          "V3",
          "V4",
          "V5",
          "V6",
          "V7",
          "V8",
          "V9",
          "V10"
        ]
      },
      "RuntimeDbWeight": {
        "read": "Weight",
        "write": "Weight"
      },
      "SignedBlock": {
        "block": "Block",
        "justification": "Justification"
      },
      "StorageData": "Bytes",
      "TransactionPriority": "u64",
      "ValidatorId": "AccountId",
      "Weight": "u64",
      "WeightMultiplier": "Fixed64",
      "PreRuntime": "(ConsensusEngineId, Bytes)",
      "SealV0": "(u64, Signature)",
      "Seal": "(ConsensusEngineId, Bytes)",
      "Consensus": "(ConsensusEngineId, Bytes)",
      "Bytes": "Vec<u8>"
    }
  },
  "scheduler": {
    "types": {
      "Period": "(BlockNumber, u32)",
      "Priority": "u8",
      "SchedulePeriod": "Period",
      "SchedulePriority": "Priority",
      "Scheduled": {
        "maybeId": "Option<Bytes>",
        "priority": "SchedulePriority",
        "call": "Call",
        "maybePeriodic": "Option<SchedulePeriod>"
      },
      "TaskAddress": "(BlockNumber, u32)"
    }
  },
  "session": {
    "types": {
      "Keys": "SessionKeys4",
      "SessionKeys1": "(AccountId)",
      "SessionKeys2": "(AccountId, AccountId)",
      "SessionKeys3": "(AccountId, AccountId, AccountId)",
      "SessionKeys4": "(AccountId, AccountId, AccountId, AccountId)",
      "SessionKeys5": "(AccountId, AccountId, AccountId, AccountId, AccountId)",
      "SessionKeys6": "(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",
      "FullIdentification": "Exposure",
      "IdentificationTuple": "(ValidatorId, FullIdentification)",
      "MembershipProof": {
        "session": "SessionIndex",
        "trieNodes": "Vec<Vec<u8>>",
        "validatorCount": "ValidatorCount"
      },
      "SessionIndex": "u32",
      "ValidatorCount": "u32"
    }
  },
  "society": {
    "types": {
      "Bid": {
        "who": "AccountId",
        "kind": "BidKind",
        "value": "Balance"
      },
      "BidKind": {
        "_enum": {
          "Deposit": "Balance",
          "Vouch": "(AccountId, Balance)"
        }
      },
      "SocietyJudgement": {
        "_enum": [
          "Rebid",
          "Reject",
          "Approve"
        ]
      },
      "SocietyVote": {
        "_enum": [
          "Skeptic",
          "Reject",
          "Approve"
        ]
      },
      "StrikeCount": "u32",
      "VouchingStatus": {
        "_enum": [
          "Vouching",
          "Banned"
        ]
      }
    }
  },
  "staking": {
    "types": {
      "Points": "u32",
      "EraPoints": {
        "total": "Points",
        "individual": "Vec<Points>"
      },
      "ActiveEraInfo": {
        "index": "EraIndex",
        "start": "Option<Moment>"
      },
      "CompactAssignments": {
        "votes1": "Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",
        "votes2": "Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",
        "votes3": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",
        "votes4": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",
        "votes5": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",
        "votes6": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",
        "votes7": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",
        "votes8": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",
        "votes9": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",
        "votes10": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",
        "votes11": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",
        "votes12": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",
        "votes13": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",
        "votes14": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",
        "votes15": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",
        "votes16": "Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>"
      },
      "CompactAssignmentsTo257": {
        "votes1": "Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>",
        "votes2": "Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>",
        "votes3": "Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>",
        "votes4": "Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>",
        "votes5": "Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>",
        "votes6": "Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>",
        "votes7": "Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>",
        "votes8": "Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>",
        "votes9": "Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>",
        "votes10": "Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>",
        "votes11": "Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>",
        "votes12": "Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>",
        "votes13": "Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>",
        "votes14": "Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>",
        "votes15": "Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>",
        "votes16": "Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>"
      },
      "CompactScore": "(ValidatorIndex, OffchainAccuracy)",
      "CompactScoreCompact": "(ValidatorIndexCompact, OffchainAccuracyCompact)",
      "ElectionCompute": {
        "_enum": [
          "OnChain",
          "Signed",
          "Authority"
        ]
      },
      "ElectionResult": {
        "compute": "ElectionCompute",
        "slotStake": "Balance",
        "electedStashes": "Vec<AccountId>",
        "exposures": "Vec<(AccountId, Exposure)>"
      },
      "ElectionScore": "[u128; 3]",
      "ElectionSize": {
        "validators": "Compact<ValidatorIndex>",
        "nominators": "Compact<NominatorIndex>"
      },
      "ElectionStatus": {
        "_enum": {
          "Close": "Null",
          "Open": "BlockNumber"
        }
      },
      "EraIndex": "u32",
      "EraRewardPoints": {
        "total": "RewardPoint",
        "individual": "BTreeMap<AccountId, RewardPoint>"
      },
      "EraRewards": {
        "total": "u32",
        "rewards": "Vec<u32>"
      },
      "Exposure": {
        "total": "Compact<Balance>",
        "own": "Compact<Balance>",
        "others": "Vec<IndividualExposure>"
      },
      "Forcing": {
        "_enum": [
          "NotForcing",
          "ForceNew",
          "ForceNone",
          "ForceAlways"
        ]
      },
      "IndividualExposure": {
        "who": "AccountId",
        "value": "Compact<Balance>"
      },
      "KeyType": "AccountId",
      "MomentOf": "Moment",
      "Nominations": {
        "targets": "Vec<AccountId>",
        "submittedIn": "EraIndex",
        "suppressed": "bool"
      },
      "NominatorIndex": "u32",
      "NominatorIndexCompact": "Compact<NominatorIndex>",
      "OffchainAccuracy": "PerU16",
      "OffchainAccuracyCompact": "Compact<OffchainAccuracy>",
      "PhragmenScore": "[u128; 3]",
      "RewardDestination": {
        "_enum": {
          "Staked": "Null",
          "Stash": "Null",
          "Controller": "Null",
          "Account": "AccountId"
        }
      },
      "RewardDestinationTo257": {
        "_enum": [
          "Staked",
          "Stash",
          "Controller"
        ]
      },
      "RewardPoint": "u32",
      "SlashJournalEntry": {
        "who": "AccountId",
        "amount": "Balance",
        "ownSlash": "Balance"
      },
      "SlashingSpansTo204": {
        "spanIndex": "SpanIndex",
        "lastStart": "EraIndex",
        "prior": "Vec<EraIndex>"
      },
      "SlashingSpans": {
        "spanIndex": "SpanIndex",
        "lastStart": "EraIndex",
        "lastNonzeroSlash": "EraIndex",
        "prior": "Vec<EraIndex>"
      },
      "SpanIndex": "u32",
      "SpanRecord": {
        "slashed": "Balance",
        "paidOut": "Balance"
      },
      "StakingLedgerTo223": {
        "stash": "AccountId",
        "total": "Compact<Balance>",
        "active": "Compact<Balance>",
        "unlocking": "Vec<UnlockChunk>"
      },
      "StakingLedgerTo240": {
        "stash": "AccountId",
        "total": "Compact<Balance>",
        "active": "Compact<Balance>",
        "unlocking": "Vec<UnlockChunk>",
        "lastReward": "Option<EraIndex>"
      },
      "StakingLedger": {
        "stash": "AccountId",
        "total": "Compact<Balance>",
        "active": "Compact<Balance>",
        "unlocking": "Vec<UnlockChunk>",
        "claimedRewards": "Vec<EraIndex>"
      },
      "UnappliedSlashOther": "(AccountId, Balance)",
      "UnappliedSlash": {
        "validator": "AccountId",
        "own": "Balance",
        "others": "Vec<UnappliedSlashOther>",
        "reporters": "Vec<AccountId>",
        "payout": "Balance"
      },
      "UnlockChunk": {
        "value": "Compact<Balance>",
        "era": "Compact<BlockNumber>"
      },
      "ValidatorIndex": "u16",
      "ValidatorIndexCompact": "Compact<ValidatorIndex>",
      "ValidatorPrefs": {
        "commission": "Compact<Perbill>"
      },
      "ValidatorPrefsTo196": {
        "validatorPayment": "Compact<Balance>"
      },
      "ValidatorPrefsTo145": {
        "unstakeThreshold": "Compact<u32>",
        "validatorPayment": "Compact<Balance>"
      }
    }
  },
  "state": {
    "types": {
      "ApiId": "[u8; 8]",
      "KeyValueOption": "(StorageKey, Option<StorageData>)",
      "ReadProof": {
        "at": "Hash",
        "proof": "Vec<Bytes>"
      },
      "RuntimeVersionApi": "(ApiId, u32)",
      "RuntimeVersion": {
        "specName": "Text",
        "implName": "Text",
        "authoringVersion": "u32",
        "specVersion": "u32",
        "implVersion": "u32",
        "apis": "Vec<RuntimeVersionApi>",
        "transactionVersion": "u32"
      },
      "StorageChangeSet": {
        "block": "Hash",
        "changes": "Vec<KeyValueOption>"
      }
    }
  },
  "support": {
    "types": {
      "WeightToFeeCoefficient": {
        "coeffInteger": "Balance",
        "coeffFrac": "Perbill",
        "negative": "bool",
        "degree": "u8"
      }
    }
  },
  "system": {
    "types": {
      "AccountInfo": {
        "nonce": "Index",
        "refcount": "RefCount",
        "data": "AccountData"
      },
      "ApplyExtrinsicResult": "Result<DispatchOutcome, TransactionValidityError>",
      "ChainProperties": {
        "ss58Format": "Option<u8>",
        "tokenDecimals": "Option<u32>",
        "tokenSymbol": "Option<Text>"
      },
      "ChainType": {
        "_enum": {
          "Development": "Null",
          "Local": "Null",
          "Live": "Null",
          "Custom": "Text"
        }
      },
      "DigestOf": "Digest",
      "DispatchClass": {
        "_enum": [
          "Normal",
          "Operational",
          "Mandatory"
        ]
      },
      "DispatchError": {
        "_enum": {
          "Other": "Null",
          "CannotLookup": "Null",
          "BadOrigin": "Null",
          "Module": "DispatchErrorModule"
        }
      },
      "DispatchErrorModule": {
        "index": "u8",
        "error": "u8"
      },
      "DispatchErrorTo198": {
        "module": "Option<u8>",
        "error": "u8"
      },
      "DispatchInfo": {
        "weight": "Weight",
        "class": "DispatchClass",
        "paysFee": "Pays"
      },
      "DispatchInfoTo190": {
        "weight": "Weight",
        "class": "DispatchClass"
      },
      "DispatchInfoTo244": {
        "weight": "Weight",
        "class": "DispatchClass",
        "paysFee": "bool"
      },
      "DispatchOutcome": "Result<(), DispatchError>",
      "DispatchResult": "Result<(), DispatchError>",
      "DispatchResultOf": "DispatchResult",
      "DispatchResultTo198": "Result<(), Text>",
      "Event": "GenericEvent",
      "EventId": "[u8; 2]",
      "EventIndex": "u32",
      "EventRecord": {
        "phase": "Phase",
        "event": "Event",
        "topics": "Vec<Hash>"
      },
      "EventRecordTo76": {
        "phase": "Phase",
        "event": "Event"
      },
      "Health": {
        "peers": "u64",
        "isSyncing": "bool",
        "shouldHavePeers": "bool"
      },
      "InvalidTransaction": {
        "_enum": {
          "Call": "Null",
          "Payment": "Null",
          "Future": "Null",
          "Stale": "Null",
          "BadProof": "Null",
          "AncientBirthBlock": "Null",
          "ExhaustsResources": "Null",
          "Custom": "u8",
          "BadMandatory": "Null",
          "MandatoryDispatch": "Null"
        }
      },
      "Key": "Bytes",
      "LastRuntimeUpgradeInfo": {
        "specVersion": "Compact<u32>",
        "specName": "Text"
      },
      "NetworkState": {
        "peerId": "Text",
        "listenedAddresses": "Vec<Text>",
        "externalAddresses": "Vec<Text>",
        "connectedPeers": "HashMap<Text, Peer>",
        "notConnectedPeers": "HashMap<Text, NotConnectedPeer>",
        "averageDownloadPerSec": "u64",
        "averageUploadPerSec": "u64",
        "peerset": "NetworkStatePeerset"
      },
      "NetworkStatePeerset": {
        "messageQueue": "u64",
        "nodes": "HashMap<Text, NetworkStatePeersetInfo>"
      },
      "NetworkStatePeersetInfo": {
        "connected": "bool",
        "reputation": "i32"
      },
      "NodeRole": {
        "_enum": {
          "Full": "Null",
          "LightClient": "Null",
          "Authority": "Null",
          "UnknownRole": "u8"
        }
      },
      "NotConnectedPeer": {
        "knownAddresses": "Vec<Text>",
        "latestPingTime": "Option<PeerPing>",
        "versionString": "Option<Text>"
      },
      "Peer": {
        "enabled": "bool",
        "endpoint": "PeerEndpoint",
        "knownAddresses": "Vec<Text>",
        "latestPingTime": "PeerPing",
        "open": "bool",
        "versionString": "Text"
      },
      "PeerEndpoint": {
        "listening": "PeerEndpointAddr"
      },
      "PeerEndpointAddr": {
        "_alias": {
          "localAddr": "local_addr",
          "sendBackAddr": "send_back_addr"
        },
        "localAddr": "Text",
        "sendBackAddr": "Text"
      },
      "PeerPing": {
        "nanos": "u64",
        "secs": "u64"
      },
      "PeerInfo": {
        "peerId": "Text",
        "roles": "Text",
        "protocolVersion": "u32",
        "bestHash": "Hash",
        "bestNumber": "BlockNumber"
      },
      "Phase": {
        "_enum": {
          "ApplyExtrinsic": "u32",
          "Finalization": "Null",
          "Initialization": "Null"
        }
      },
      "RefCount": "u8",
      "TransactionValidityError": {
        "_enum": {
          "Invalid": "InvalidTransaction",
          "Unknown": "UnknownTransaction"
        }
      },
      "UnknownTransaction": {
        "_enum": {
          "CannotLookup": "Null",
          "NoUnsignedValidator": "Null",
          "Custom": "u8"
        }
      }
    }
  },
  "treasury": {
    "types": {
      "OpenTip": {
        "reason": "Hash",
        "who": "AccountId",
        "finder": "AccountId",
        "deposit": "Balance",
        "closes": "Option<BlockNumber>",
        "tips": "Vec<OpenTipTip>",
        "findersFee": "bool"
      },
      "OpenTipTo225": {
        "reason": "Hash",
        "who": "AccountId",
        "finder": "Option<OpenTipFinderTo225>",
        "closes": "Option<BlockNumber>",
        "tips": "Vec<OpenTipTip>"
      },
      "OpenTipFinderTo225": "(AccountId, Balance)",
      "OpenTipTip": "(AccountId, Balance)",
      "TreasuryProposal": {
        "proposer": "AccountId",
        "value": "Balance",
        "beneficiary": "AccountId",
        "bond": "Balance"
      }
    }
  },
  "txpayment": {
    "types": {
      "Multiplier": "Fixed128"
    }
  },
  "utility": {
    "types": {
      "Multisig": {
        "when": "Timepoint",
        "deposit": "Balance",
        "depositor": "AccountId",
        "approvals": "Vec<AccountId>"
      },
      "Timepoint": {
        "height": "BlockNumber",
        "index": "u32"
      }
    }
  },
  "vesting": {
    "types": {
      "VestingInfo": {
        "locked": "Balance",
        "perBlock": "Balance",
        "startingBlock": "BlockNumber"
      }
    }
  }
}
